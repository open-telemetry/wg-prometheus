// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: configmanager/configmanager.proto

package configmanager

import (
	clb "github.com/aws-observability/collector-load-balancer/proto/generated/clb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPrometheusFileSDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"` // name of files, empty will get all the files
}

func (x *GetPrometheusFileSDReq) Reset() {
	*x = GetPrometheusFileSDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configmanager_configmanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusFileSDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusFileSDReq) ProtoMessage() {}

func (x *GetPrometheusFileSDReq) ProtoReflect() protoreflect.Message {
	mi := &file_configmanager_configmanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusFileSDReq.ProtoReflect.Descriptor instead.
func (*GetPrometheusFileSDReq) Descriptor() ([]byte, []int) {
	return file_configmanager_configmanager_proto_rawDescGZIP(), []int{0}
}

func (x *GetPrometheusFileSDReq) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetPrometheusFileSDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*clb.PrometheusFileSD `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetPrometheusFileSDRes) Reset() {
	*x = GetPrometheusFileSDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configmanager_configmanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrometheusFileSDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrometheusFileSDRes) ProtoMessage() {}

func (x *GetPrometheusFileSDRes) ProtoReflect() protoreflect.Message {
	mi := &file_configmanager_configmanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrometheusFileSDRes.ProtoReflect.Descriptor instead.
func (*GetPrometheusFileSDRes) Descriptor() ([]byte, []int) {
	return file_configmanager_configmanager_proto_rawDescGZIP(), []int{1}
}

func (x *GetPrometheusFileSDRes) GetFiles() []*clb.PrometheusFileSD {
	if x != nil {
		return x.Files
	}
	return nil
}

type UpdatePrometheusFileSDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*clb.PrometheusFileSD `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"` // There can be multiple fields because each job in prometheus config maps to one file
}

func (x *UpdatePrometheusFileSDReq) Reset() {
	*x = UpdatePrometheusFileSDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configmanager_configmanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePrometheusFileSDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrometheusFileSDReq) ProtoMessage() {}

func (x *UpdatePrometheusFileSDReq) ProtoReflect() protoreflect.Message {
	mi := &file_configmanager_configmanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrometheusFileSDReq.ProtoReflect.Descriptor instead.
func (*UpdatePrometheusFileSDReq) Descriptor() ([]byte, []int) {
	return file_configmanager_configmanager_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePrometheusFileSDReq) GetFiles() []*clb.PrometheusFileSD {
	if x != nil {
		return x.Files
	}
	return nil
}

type UpdatePrometheusFileSDRRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedFiles int32 `protobuf:"varint,1,opt,name=updated_files,json=updatedFiles,proto3" json:"updated_files,omitempty"` // Number of files written, could be smaller than requests if there are invalid file path.
}

func (x *UpdatePrometheusFileSDRRes) Reset() {
	*x = UpdatePrometheusFileSDRRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configmanager_configmanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePrometheusFileSDRRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrometheusFileSDRRes) ProtoMessage() {}

func (x *UpdatePrometheusFileSDRRes) ProtoReflect() protoreflect.Message {
	mi := &file_configmanager_configmanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrometheusFileSDRRes.ProtoReflect.Descriptor instead.
func (*UpdatePrometheusFileSDRRes) Descriptor() ([]byte, []int) {
	return file_configmanager_configmanager_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePrometheusFileSDRRes) GetUpdatedFiles() int32 {
	if x != nil {
		return x.UpdatedFiles
	}
	return 0
}

var File_configmanager_configmanager_proto protoreflect.FileDescriptor

var file_configmanager_configmanager_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x09, 0x63, 0x6c, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x65, 0x73,
	0x12, 0x30, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x65, 0x71, 0x12,
	0x30, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x41, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x52, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x32, 0x8e, 0x02, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x12, 0x31, 0x2e, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x63,
	0x6c, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x6f, 0x74, 0x65,
	0x6c, 0x2e, 0x63, 0x6c, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x44, 0x52, 0x52, 0x65, 0x73, 0x12, 0x75,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x44, 0x12, 0x2e, 0x2e, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x62,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6c, 0x62,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x44, 0x52, 0x65, 0x73, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x77, 0x73, 0x2d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d,
	0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x63, 0x6c,
	0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configmanager_configmanager_proto_rawDescOnce sync.Once
	file_configmanager_configmanager_proto_rawDescData = file_configmanager_configmanager_proto_rawDesc
)

func file_configmanager_configmanager_proto_rawDescGZIP() []byte {
	file_configmanager_configmanager_proto_rawDescOnce.Do(func() {
		file_configmanager_configmanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_configmanager_configmanager_proto_rawDescData)
	})
	return file_configmanager_configmanager_proto_rawDescData
}

var file_configmanager_configmanager_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_configmanager_configmanager_proto_goTypes = []interface{}{
	(*GetPrometheusFileSDReq)(nil),     // 0: otel.clb.configmanager.GetPrometheusFileSDReq
	(*GetPrometheusFileSDRes)(nil),     // 1: otel.clb.configmanager.GetPrometheusFileSDRes
	(*UpdatePrometheusFileSDReq)(nil),  // 2: otel.clb.configmanager.UpdatePrometheusFileSDReq
	(*UpdatePrometheusFileSDRRes)(nil), // 3: otel.clb.configmanager.UpdatePrometheusFileSDRRes
	(*clb.PrometheusFileSD)(nil),       // 4: otel.clb.PrometheusFileSD
}
var file_configmanager_configmanager_proto_depIdxs = []int32{
	4, // 0: otel.clb.configmanager.GetPrometheusFileSDRes.files:type_name -> otel.clb.PrometheusFileSD
	4, // 1: otel.clb.configmanager.UpdatePrometheusFileSDReq.files:type_name -> otel.clb.PrometheusFileSD
	2, // 2: otel.clb.configmanager.ConfigManagerService.UpdatePrometheusFileSD:input_type -> otel.clb.configmanager.UpdatePrometheusFileSDReq
	0, // 3: otel.clb.configmanager.ConfigManagerService.GetPrometheusFileSD:input_type -> otel.clb.configmanager.GetPrometheusFileSDReq
	3, // 4: otel.clb.configmanager.ConfigManagerService.UpdatePrometheusFileSD:output_type -> otel.clb.configmanager.UpdatePrometheusFileSDRRes
	1, // 5: otel.clb.configmanager.ConfigManagerService.GetPrometheusFileSD:output_type -> otel.clb.configmanager.GetPrometheusFileSDRes
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_configmanager_configmanager_proto_init() }
func file_configmanager_configmanager_proto_init() {
	if File_configmanager_configmanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configmanager_configmanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusFileSDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configmanager_configmanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrometheusFileSDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configmanager_configmanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePrometheusFileSDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configmanager_configmanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePrometheusFileSDRRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configmanager_configmanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configmanager_configmanager_proto_goTypes,
		DependencyIndexes: file_configmanager_configmanager_proto_depIdxs,
		MessageInfos:      file_configmanager_configmanager_proto_msgTypes,
	}.Build()
	File_configmanager_configmanager_proto = out.File
	file_configmanager_configmanager_proto_rawDesc = nil
	file_configmanager_configmanager_proto_goTypes = nil
	file_configmanager_configmanager_proto_depIdxs = nil
}
